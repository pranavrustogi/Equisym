package com.equisym.web;

import java.io.UnsupportedEncodingException;
import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import javax.mail.MessagingException;
import javax.servlet.http.HttpServletRequest;

import org.springframework.data.repository.query.Param;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.equisym.model.Slots;
import com.equisym.model.Students;
import com.equisym.model.Users;
import com.equisym.model.Repository.SlotRepository;
import com.equisym.model.Repository.StudentRepository;
import com.equisym.service.UserService;
import com.equisym.service.Utility;
import com.equisym.service.slot.SlotService;
import com.equisym.service.student.StudentService;
import com.equisym.web.dto.SlotCreationDto;
import com.equisym.web.dto.StudentsDto;
import com.equisym.web.dto.UserRegistrationDto;

@Controller
//@RequestMapping
public class SlotHomeController 
{
	private SlotService slotService;
	private StudentService studentService;
	private SlotRepository slotRepository;
	private StudentRepository studentRepository;
	private List<Slots> slotList;
	private String SlotCourse;
	private LocalDate SlotDate;
	private String timeIn;
	private String timeOut;
	private String email;
	//private String emailId = SecurityContextHolder.getContext().getAuthentication().getName();

	public SlotHomeController(SlotService slotService, StudentService studentService ,SlotRepository slotRepository, StudentRepository studentRepository) 
	{
		super();
		this.slotService = slotService;
		this.studentService = studentService;
		this.slotRepository = slotRepository;
		this.studentRepository = studentRepository;
	}

	
	
	@GetMapping("/slot_home")
	public String SlotHome(Model model)
	{
		
		List<String> scourse= slotRepository.getCourses();
		System.out.println("Pringting Courses :");
		for(int i=0;i<scourse.size();i++)
		{
			System.out.println(scourse.get(i));
		}
		model.addAttribute("scourse",scourse);
		
		
		return "slot_home"; 
	}
	@PostMapping("/slot_home")
	public String SlotHome(@PathVariable("course") String course)
	{
		System.out.println("Course Name : "+course);
		return "available_slots";
	}
	
	
	
		
}
